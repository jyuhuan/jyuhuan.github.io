{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BloomFilter"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Creating an instance","level":3,"anchor":"Creating-an-instance"},{"inlineContent":[{"type":"text","text":"To create a bloom filter, use "},{"identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/init(cellCount:)","type":"reference","isActive":true},{"type":"text","text":", and specify the number"},{"text":" ","type":"text"},{"text":"of cells. The higher the number of cells, the more accurate the bloom","type":"text"},{"text":" ","type":"text"},{"text":"filter’s “may have” answer will be, at the expense of higher memory usage:","type":"text"}],"type":"paragraph"},{"code":["var bf = BloomFilter<String>(cellCount: 10)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"To specify your own hash functions, use "},{"type":"reference","identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/init(cellCount:hashFunctions:)","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var bf = BloomFilter<String>(cellCount: 4, hashFunctions: \/*...*\/)"]},{"text":"Adding an element","type":"heading","anchor":"Adding-an-element","level":3},{"inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/add(_:)","isActive":true,"type":"reference"},{"text":" to add an element to the bloom filter:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["bf.add(\"x\")"],"syntax":"swift"},{"type":"heading","text":"Checking existence of an element","level":3,"anchor":"Checking-existence-of-an-element"},{"inlineContent":[{"type":"text","text":"When querying the existence of an element, choose the verb that matches your"},{"type":"text","text":" "},{"text":"intention.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To test if an element is possibly in the bloom filter, use"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/mayHave(_:)"},{"type":"text","text":":"}]},{"code":["bf.mayHave(\"x\")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To test if an element is definitely not in the bloom filter, use"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/doesNotHave(_:)"},{"type":"text","text":":"}]},{"type":"codeListing","code":["bf.doesNotHave(\"y\")"],"syntax":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Solid\/documentation\/Solid","doc:\/\/Solid\/documentation\/Solid\/ProbablisticDataStructures"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Solid\/documentation\/Solid\/ApproximateAccumulator"],"type":"conformsTo","title":"Conforms To"}],"abstract":[{"type":"text","text":"A data structure that can determine if an element is possibly present or"},{"type":"text","text":" "},{"text":"definitely absent.","type":"text"}],"metadata":{"navigatorTitle":[{"text":"BloomFilter","kind":"identifier"}],"role":"symbol","modules":[{"name":"Solid"}],"roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BloomFilter","kind":"identifier"}],"title":"BloomFilter","externalID":"s:5Solid11BloomFilterV"},"kind":"symbol","topicSections":[{"title":"Creating an instance","anchor":"Creating-an-instance","identifiers":["doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/init(cellCount:)","doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/init(cellCount:hashFunctions:)"]},{"anchor":"Adding-an-element","identifiers":["doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/add(_:)"],"title":"Adding an element"},{"title":"Checking existence","anchor":"Checking-existence","identifiers":["doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/mayHave(_:)","doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/doesNotHave(_:)"]},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/collect(value:for:)","doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/value(for:)"],"title":"Instance Methods","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/solid\/bloomfilter"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Solid\/documentation\/Solid\/CountMinSketch","doc:\/\/Solid\/documentation\/Solid\/HashBasedApproximateAccumulator","doc:\/\/Solid\/documentation\/Solid\/ApproximateAccumulator"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Solid/documentation/Solid/ApproximateAccumulator":{"url":"\/documentation\/solid\/approximateaccumulator","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApproximateAccumulator"}],"abstract":[{"text":"A data structure that approximately accumulates values associated with keys.","type":"text"}],"title":"ApproximateAccumulator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApproximateAccumulator","kind":"identifier"}],"identifier":"doc:\/\/Solid\/documentation\/Solid\/ApproximateAccumulator","kind":"symbol"},"doc://Solid/documentation/Solid/BloomFilter":{"url":"\/documentation\/solid\/bloomfilter","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BloomFilter","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"BloomFilter"}],"title":"BloomFilter","abstract":[{"type":"text","text":"A data structure that can determine if an element is possibly present or"},{"text":" ","type":"text"},{"type":"text","text":"definitely absent."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter"},"doc://Solid/documentation/Solid/BloomFilter/mayHave(_:)":{"abstract":[{"text":"Tests whether the given element is possibly in this bloom filter.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mayHave"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"mayHave(_:)","identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/mayHave(_:)","type":"topic","url":"\/documentation\/solid\/bloomfilter\/mayhave(_:)"},"doc://Solid/documentation/Solid/BloomFilter/init(cellCount:hashFunctions:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"cellCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"text":"hashFunctions","kind":"externalParam"},{"text":": [(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"url":"\/documentation\/solid\/bloomfilter\/init(cellcount:hashfunctions:)","title":"init(cellCount:hashFunctions:)","kind":"symbol","identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/init(cellCount:hashFunctions:)","abstract":[{"text":"Creates a bloom filter using the specified hash functions.","type":"text"}],"role":"symbol","type":"topic"},"doc://Solid/documentation/Solid/BloomFilter/collect(value:for:)":{"url":"\/documentation\/solid\/bloomfilter\/collect(value:for:)","abstract":[],"type":"topic","role":"symbol","title":"collect(value:for:)","identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/collect(value:for:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"collect","kind":"identifier"},{"kind":"text","text":"("},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Solid/documentation/Solid/HashBasedApproximateAccumulator":{"url":"\/documentation\/solid\/hashbasedapproximateaccumulator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HashBasedApproximateAccumulator","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HashBasedApproximateAccumulator","kind":"identifier"}],"abstract":[{"text":"A data structure that accumulates values approximately by hashing the keys.","type":"text"}],"identifier":"doc:\/\/Solid\/documentation\/Solid\/HashBasedApproximateAccumulator","title":"HashBasedApproximateAccumulator","role":"symbol","kind":"symbol"},"doc://Solid/documentation/Solid/BloomFilter/add(_:)":{"url":"\/documentation\/solid\/bloomfilter\/add(_:)","role":"symbol","abstract":[{"text":"Adds an element to this bloom filter.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/add(_:)","title":"add(_:)","kind":"symbol","type":"topic"},"doc://Solid/documentation/Solid/BloomFilter/init(cellCount:)":{"url":"\/documentation\/solid\/bloomfilter\/init(cellcount:)","type":"topic","role":"symbol","abstract":[{"text":"Creates a bloom filter.","type":"text"}],"title":"init(cellCount:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"cellCount","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/init(cellCount:)","kind":"symbol"},"doc://Solid/documentation/Solid/BloomFilter/doesNotHave(_:)":{"identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/doesNotHave(_:)","type":"topic","title":"doesNotHave(_:)","url":"\/documentation\/solid\/bloomfilter\/doesnothave(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"doesNotHave","kind":"identifier"},{"kind":"text","text":"("},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tests whether the given element is definitely not in this bloom filter."}],"kind":"symbol","role":"symbol"},"doc://Solid/documentation/Solid":{"abstract":[{"type":"text","text":"A library of abstract data structures and algorithms."}],"identifier":"doc:\/\/Solid\/documentation\/Solid","url":"\/documentation\/solid","type":"topic","kind":"symbol","role":"collection","title":"Solid"},"doc://Solid/documentation/Solid/ProbablisticDataStructures":{"abstract":[{"type":"text","text":"Efficient data structures that provide approximations instead of exact answers."}],"identifier":"doc:\/\/Solid\/documentation\/Solid\/ProbablisticDataStructures","url":"\/documentation\/solid\/probablisticdatastructures","type":"topic","kind":"article","role":"collectionGroup","title":"Probablistic Data Structures"},"doc://Solid/documentation/Solid/BloomFilter/value(for:)":{"kind":"symbol","type":"topic","role":"symbol","title":"value(for:)","identifier":"doc:\/\/Solid\/documentation\/Solid\/BloomFilter\/value(for:)","url":"\/documentation\/solid\/bloomfilter\/value(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"value"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[]},"doc://Solid/documentation/Solid/CountMinSketch":{"kind":"symbol","title":"CountMinSketch","type":"topic","identifier":"doc:\/\/Solid\/documentation\/Solid\/CountMinSketch","role":"symbol","abstract":[{"text":"A memory-efficient data structure for approximate frequency counting.","type":"text"}],"url":"\/documentation\/solid\/countminsketch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CountMinSketch","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CountMinSketch"}]}}}